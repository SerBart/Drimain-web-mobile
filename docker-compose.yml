services:
  db:
    image: postgres:16
    container_name: drimain-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: drimain
      POSTGRES_USER: drimain
      POSTGRES_PASSWORD: drimain
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U drimain -d drimain"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drimain-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/drimain
      SPRING_DATASOURCE_USERNAME: drimain
      SPRING_DATASOURCE_PASSWORD: drimain
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_FLYWAY_ENABLED: "true"
      APP_ATTACHMENTS_BASE_PATH: /app/uploads/attachments
      APP_ATTACHMENTS_MAX_FILE_SIZE_BYTES: "10485760"
    ports:
      - "8080:8080"
    volumes:
      - attachments:/app/uploads/attachments
    restart: unless-stopped

  # (Opcjonalnie) prosty panel do bazy – możesz odkomentować jeśli chcesz
  # adminer:
  #   image: adminer:latest
  #   container_name: drimain-adminer
  #   depends_on:
  #     - db
  #   ports:
  #     - "8081:8080"
  #   restart: unless-stopped

volumes:
  pgdata:
  attachments: